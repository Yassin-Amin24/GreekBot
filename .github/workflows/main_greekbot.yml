# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - GreekBot

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install backend dependencies
        working-directory: ./Ambitionz_Az_a_Programah
        run: npm install --production=false

      - name: Verify backend files
        working-directory: ./Ambitionz_Az_a_Programah
        run: |
          echo "Checking required backend files..."
          ls -la
          echo "Checking if server.js exists..."
          test -f server.js && echo "✓ server.js found" || echo "✗ server.js missing"
          echo "Checking if cosmosDB.js exists..."
          test -f cosmosDB.js && echo "✓ cosmosDB.js found" || echo "✗ cosmosDB.js missing"
          echo "Checking if openai_detector.js exists..."
          test -f openai_detector.js && echo "✓ openai_detector.js found" || echo "✗ openai_detector.js missing"
          echo "Checking if prompt.json exists..."
          test -f prompt.json && echo "✓ prompt.json found" || echo "✗ prompt.json missing"
          echo "Checking if startup.js exists..."
          test -f startup.js && echo "✓ startup.js found" || echo "✗ startup.js missing"

      - name: Install frontend dependencies
        working-directory: ./Ambitionz_Az_a_Programah/client
        run: npm install

      - name: Build frontend
        working-directory: ./Ambitionz_Az_a_Programah/client
        run: npm run build
        continue-on-error: true

      - name: Copy frontend build to backend
        run: |
          if [ -d "./Ambitionz_Az_a_Programah/client/build" ]; then
            cp -r ./Ambitionz_Az_a_Programah/client/build ./Ambitionz_Az_a_Programah/public
          else
            echo "Frontend build failed, creating empty public directory"
            mkdir -p ./Ambitionz_Az_a_Programah/public
            echo "<html><body><h1>Frontend build failed</h1><p>Please check the build logs.</p></body></html>" > ./Ambitionz_Az_a_Programah/public/index.html
          fi

      - name: Test backend application
        working-directory: ./Ambitionz_Az_a_Programah
        run: |
          echo "Testing backend application..."
          node -e "
            try {
              require('./server.js');
              console.log('✓ Backend application loads successfully');
            } catch (error) {
              console.error('✗ Backend application failed to load:', error.message);
              process.exit(1);
            }
          "
          echo "Testing startup script..."
          node -e "
            try {
              require('./startup.js');
              console.log('✓ Startup script loads successfully');
            } catch (error) {
              console.error('✗ Startup script failed to load:', error.message);
              process.exit(1);
            }
          "

      - name: Create deployment package
        run: |
          cd ./Ambitionz_Az_a_Programah
          tar -czf ../deployment-package.tar.gz .

      - name: Verify deployment package
        run: |
          echo "Deployment package size:"
          ls -lh deployment-package.tar.gz
          echo "Package contents:"
          tar -tzf deployment-package.tar.gz | head -10

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deployment-package.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'GreekBot'
          slot-name: 'Production'
          package: deployment-package.tar.gz
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_93DBFCBB34A645CABBDD78DD505D0DC6 }}